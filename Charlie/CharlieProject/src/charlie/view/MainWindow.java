/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package charlie.view;

import charlie.control.DrugController;
import charlie.control.GameInitializer;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RunEvil
 */
public class MainWindow extends javax.swing.JFrame {

    DrugController drugControl;
    GameInitializer gameInitializer;
    DefaultTableModel model;
    DefaultTableModel modelInventory;

    /**
     * Creates new form MainWindow
     *
     * @param name
     */
    public MainWindow(String name) {
        initComponents();
        drugControl = new DrugController();
        gameInitializer = drugControl.getGameInitializer();
        setVisible(true);
        setLocationRelativeTo(null);
        start(name);
    }

    private void start(String name) {
        gameInitializer.setUsername(name);
        gameInitializer.setCurrentCountry("Denmark");
        gameInitializer.setDay(1);
        gameInitializer.updateInventory();
        jLabelCountry2.setText(gameInitializer.getCurrentCountry() + "'s");
        jLabelPerson2.setText(name + "'s");
        model = (DefaultTableModel) jTableDrugs.getModel();
        addDrugsToCountry();
        modelInventory = (DefaultTableModel) jTableDrugs1.getModel();
        addDrugsToInventory();
    }

    private void showBuySell() {
        jDialogBuySell.setMinimumSize(new Dimension(350, 200));
        jDialogBuySell.setVisible(true);
        jDialogBuySell.setLocationRelativeTo(this);
        jFormattedTextFieldAmount.setText("");
    }

    public void updateWindow() {
        // Update screen to the selected country
        jLabelCountry2.setText(jComboBoxCountries.getItemAt(jComboBoxCountries.getSelectedIndex()));

        // Set the currentCountry to the selected country
        gameInitializer.setCurrentCountry(jComboBoxCountries.getItemAt(jComboBoxCountries.getSelectedIndex()));

        // Calculate new prices on drugs...
        drugControl.calculateDrug();

        // update progressbarDay...
        jProgressBarDay.setValue(gameInitializer.getDay());
        jProgressBarDay.setString(gameInitializer.getDay() + "/20");

        //Update drugslist..
        addDrugsToCountry();
    }

    public void addDrugsToCountry() {
        //Clear the table of content
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        //Fill up table with drugs
        for (int i = 0; i < gameInitializer.getDrugs().size(); i++) {
            String name = gameInitializer.getDrugs().get(i).getName();
            double price = gameInitializer.getDrugs().get(i).getPrice();
            int amount = gameInitializer.getDrugs().get(i).getAvailability();

            model.addRow(new Object[]{name, price, amount});
        }
    }

    public void addDrugsToInventory() {
        //Clear the table of content
        while (modelInventory.getRowCount() > 0) {
            modelInventory.removeRow(0);
        }

        //Fill up table with drugs
        for (int i = 0; i < gameInitializer.getStashDrugs().size(); i++) {
            String name = gameInitializer.getStashDrugs().get(i).getName();
            int amount = gameInitializer.getStashDrugs().get(i).getUserAmount();

            modelInventory.addRow(new Object[]{name, amount});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogBuySell = new javax.swing.JDialog();
        jPanelBuySell = new javax.swing.JPanel();
        jComboBoxSelectDrug = new javax.swing.JComboBox<>();
        jFormattedTextFieldAmount = new javax.swing.JFormattedTextField();
        jLabelAmount = new javax.swing.JLabel();
        jButtonBuy = new javax.swing.JButton();
        jButtonSell = new javax.swing.JButton();
        jLabelCountry = new javax.swing.JLabel();
        jLabelCountry2 = new javax.swing.JLabel();
        jLabelAvailableDrugs = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDrugs = new javax.swing.JTable();
        jLabelMoney = new javax.swing.JLabel();
        jLabelMoneyLeft = new javax.swing.JLabel();
        jLabelPerson = new javax.swing.JLabel();
        jLabelPerson2 = new javax.swing.JLabel();
        jLabelInventory = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDrugs1 = new javax.swing.JTable();
        jLabelCurrentDay = new javax.swing.JLabel();
        jProgressBarDay = new javax.swing.JProgressBar();
        jComboBoxCountries = new javax.swing.JComboBox<>();
        jButtonTravel = new javax.swing.JButton();
        jButtonBuySell = new javax.swing.JButton();
        jButtonEndGame = new javax.swing.JButton();

        jComboBoxSelectDrug.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cocaine", "Heroin", "Amphetamine", "Acid", "Angel Dust", "Crystal Meth", "Hash", "Weed", "Mushrooms", "Valium" }));

        jLabelAmount.setText("Amount:");

        jButtonBuy.setText("Buy");
        jButtonBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuyActionPerformed(evt);
            }
        });

        jButtonSell.setText("Sell");
        jButtonSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSellActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBuySellLayout = new javax.swing.GroupLayout(jPanelBuySell);
        jPanelBuySell.setLayout(jPanelBuySellLayout);
        jPanelBuySellLayout.setHorizontalGroup(
            jPanelBuySellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuySellLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBuySellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonBuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelBuySellLayout.createSequentialGroup()
                        .addComponent(jComboBoxSelectDrug, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelBuySellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAmount)
                            .addComponent(jFormattedTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButtonSell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanelBuySellLayout.setVerticalGroup(
            jPanelBuySellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuySellLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabelAmount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBuySellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxSelectDrug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonBuy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSell)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogBuySellLayout = new javax.swing.GroupLayout(jDialogBuySell.getContentPane());
        jDialogBuySell.getContentPane().setLayout(jDialogBuySellLayout);
        jDialogBuySellLayout.setHorizontalGroup(
            jDialogBuySellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBuySell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogBuySellLayout.setVerticalGroup(
            jDialogBuySellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBuySell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanelBuySell.getAccessibleContext().setAccessibleName("Sell and buy drugs!");
        jPanelBuySell.getAccessibleContext().setAccessibleParent(jPanelBuySell);

        jDialogBuySell.getAccessibleContext().setAccessibleParent(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelCountry.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelCountry.setText("Country");

        jLabelCountry2.setText("Country's");

        jLabelAvailableDrugs.setText("Available drugs:");

        jTableDrugs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Price", "Amount"
            }
        ));
        jTableDrugs.setEnabled(false);
        jTableDrugs.setFocusable(false);
        jScrollPane1.setViewportView(jTableDrugs);
        if (jTableDrugs.getColumnModel().getColumnCount() > 0) {
            jTableDrugs.getColumnModel().getColumn(0).setMinWidth(85);
            jTableDrugs.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTableDrugs.getColumnModel().getColumn(2).setPreferredWidth(70);
        }

        jLabelMoney.setText("Amount of cash $:");

        jLabelMoneyLeft.setText("5000");

        jLabelPerson.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelPerson.setText("Person");
        jLabelPerson.setToolTipText("");

        jLabelPerson2.setText("Person's");

        jLabelInventory.setText("Inventory:");

        jTableDrugs1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Amount"
            }
        ));
        jTableDrugs1.setEnabled(false);
        jTableDrugs1.setFocusable(false);
        jScrollPane2.setViewportView(jTableDrugs1);

        jLabelCurrentDay.setText("Current Day:");

        jProgressBarDay.setValue(1);
        jProgressBarDay.setString("1/20");
        jProgressBarDay.setStringPainted(true);

        jComboBoxCountries.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Denmark", "Colombia", "Germany", "USA", "France", "Afghanistan" }));

        jButtonTravel.setText("Travel to selected country");
        jButtonTravel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTravelActionPerformed(evt);
            }
        });

        jButtonBuySell.setText("View Buy/Sell menu");
        jButtonBuySell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuySellActionPerformed(evt);
            }
        });

        jButtonEndGame.setText("Exit Game");
        jButtonEndGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEndGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonTravel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxCountries, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCountry)
                                    .addComponent(jLabelCountry2)
                                    .addComponent(jLabelAvailableDrugs)
                                    .addComponent(jLabelMoney))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(88, 88, 88))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelMoneyLeft))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelInventory)
                            .addComponent(jLabelCurrentDay)
                            .addComponent(jLabelPerson)
                            .addComponent(jLabelPerson2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButtonEndGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonBuySell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBarDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPerson)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPerson2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelInventory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelCurrentDay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProgressBarDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelMoneyLeft)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCountry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCountry2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAvailableDrugs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelMoney)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonBuySell)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonEndGame)
                            .addComponent(jButtonTravel)))
                    .addComponent(jComboBoxCountries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTravelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTravelActionPerformed
        // TODO add your handling code here:
        String selectedCountry = jComboBoxCountries.getItemAt(jComboBoxCountries.getSelectedIndex());
        boolean gameOver = gameInitializer.nextDay(selectedCountry);
        updateWindow(); // Update screen (to the selected country, recalculateDrug, update inventory etc)
        if (gameOver) {
            this.dispose();
            System.exit(0);
        }
    }//GEN-LAST:event_jButtonTravelActionPerformed

    private void jButtonBuySellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuySellActionPerformed
        // TODO add your handling code here:
        showBuySell();
    }//GEN-LAST:event_jButtonBuySellActionPerformed

    /*
    * 
     */
    private void jButtonBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuyActionPerformed
        // TODO add your handling code here:

        //Get name of the chosen drug
        String name = jComboBoxSelectDrug.getSelectedItem().toString();

        // Check if an amountSelected has been chosen
        if (!jFormattedTextFieldAmount.getText().isEmpty()) {

            // Get chosen amountSelected of selected drug.
            int amount = Integer.parseInt(jFormattedTextFieldAmount.getText());
            // Get amountSelected available of the chosen drug
            int amountDrug = gameInitializer.getAmountStartDrug(name);

            //Check if amountSelected is available!!!
            if (amount <= amountDrug) {

                // Get drug from dropdown-list and get price of drug from arraylist.
                int tempIndex = jComboBoxSelectDrug.getSelectedIndex();
                double price = gameInitializer.getDrugs().get(tempIndex).getPrice();

                // calculate price of drugs bought.
                double drugPrice = price * amount;
                double moneyLeft = gameInitializer.getMoney();

                if (drugPrice <= moneyLeft) {

                    // Subtract price of drugs bought from user's money..
                    double newCash = moneyLeft - drugPrice;
                    jLabelMoneyLeft.setText("" + newCash);

                    // Set user's money in stash
                    gameInitializer.setMoney(newCash);

                    // Add drug to user's arraylist in Stash 
                    gameInitializer.setDrugs(name, amount);
                    addDrugsToInventory();

                    // set userAmount of the chosen drug in drug
                    gameInitializer.setUserAmount(amount);

                    // Change amountSelected in arraylist and update druglist of country.
                    int newAmount = amountDrug - amount;
                    gameInitializer.setAvailability(name, newAmount);
                    addDrugsToCountry();
                } else {
                    JOptionPane.showMessageDialog(null, "Not enough cash! \nYou cannot afford this amount of drugs! \nPlease try again!");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Not enough drugs! \nThe amount you have chosen is not available! \nPlease try again!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter amount of chosen drug!");
        }
    }//GEN-LAST:event_jButtonBuyActionPerformed

    private void jButtonSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSellActionPerformed
        // TODO add your handling code here:

        String name = jComboBoxSelectDrug.getSelectedItem().toString();

        // Get amountSelected of selected drug.
        int amountSelected = Integer.parseInt(jFormattedTextFieldAmount.getText());
        // Get amount of the selected drug in inventory
        int amountInventory = gameInitializer.getStashDrugAmount(name);

        if (amountSelected <= amountInventory) {

            // Get drug from dropdown-list and get price of drug from arraylist..
            double price;
            price = gameInitializer.getDrugs().get(jComboBoxSelectDrug.getSelectedIndex()).getPrice();

            // calculate price of drugs sold.
            double drugPrice = price * amountSelected;

            // Add price of drugs sold to user's money.
            double cash = gameInitializer.getMoney();
            double newCash = cash + drugPrice;
            jLabelMoneyLeft.setText("" + newCash);

            // Set user's money in stash
            gameInitializer.setMoney(newCash);

            // Calculate userAmount of the chosen drug
            int newUserAmount = amountInventory - amountSelected;

            // update inventoryDrugs
            gameInitializer.setDrugsSold(name, newUserAmount);

            // update inventory
            gameInitializer.updateInventory();
            addDrugsToInventory();

            // Change amountSelected in arraylist and update druglist of country.
            int amountDrug = gameInitializer.getAmountStartDrug(name);
            int newAmountDrug = amountDrug + amountSelected;
            gameInitializer.setStartDrugs(name, newAmountDrug);
            addDrugsToCountry();

        } else {
            JOptionPane.showMessageDialog(null, "Not enough drugs! \nYou do not have the chosen amount of the drug in your inventory! \nPlease try again!");
        }
    }//GEN-LAST:event_jButtonSellActionPerformed

    private void jButtonEndGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEndGameActionPerformed
        // TODO add your handling code here:
        gameInitializer.gameOver();
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_jButtonEndGameActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuy;
    private javax.swing.JButton jButtonBuySell;
    private javax.swing.JButton jButtonEndGame;
    private javax.swing.JButton jButtonSell;
    private javax.swing.JButton jButtonTravel;
    private javax.swing.JComboBox<String> jComboBoxCountries;
    private javax.swing.JComboBox<String> jComboBoxSelectDrug;
    private javax.swing.JDialog jDialogBuySell;
    private javax.swing.JFormattedTextField jFormattedTextFieldAmount;
    private javax.swing.JLabel jLabelAmount;
    private javax.swing.JLabel jLabelAvailableDrugs;
    private javax.swing.JLabel jLabelCountry;
    private javax.swing.JLabel jLabelCountry2;
    private javax.swing.JLabel jLabelCurrentDay;
    private javax.swing.JLabel jLabelInventory;
    private javax.swing.JLabel jLabelMoney;
    private javax.swing.JLabel jLabelMoneyLeft;
    private javax.swing.JLabel jLabelPerson;
    private javax.swing.JLabel jLabelPerson2;
    private javax.swing.JPanel jPanelBuySell;
    private javax.swing.JProgressBar jProgressBarDay;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDrugs;
    private javax.swing.JTable jTableDrugs1;
    // End of variables declaration//GEN-END:variables
}
